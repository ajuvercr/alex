{% extends "base.html.tera" %}
{% block content %}

<iframe width="0" height="0" style="display: None;" name="dummyframe" id="dummyframe"></iframe>

<form class="w3-container w3-text-blue" id="form" action="/diary" method="post" targer="#dummyframe">
{# <form id="form" class="w3-container w3-text-blue"> #}
    <p>
        <input name="title" class="w3-input" type="text" autofocus placeholder="Title">
    </p>

    <p class="w3-row-padding">
        <div class="w3-half" style="padding-right: 40px;">
            <div class="w3-mobile w3-card">
                <textarea name="content" class="w3-padding w3-input" style="min-height: 400px; width: 100%;" id="inputfield" wrap="hard" onkeypress="changeText" placeholder="Content"></textarea>
            </div>
        </div>

        <div class="w3-half" style="padding-left: 40px;">
            <div class="w3-mobile w3-card">
                <div class="w3-padding" style="min-height: 400px; width: 100%" id="outputfield">
                    Pandoc output
                </div>
            </div>
        </div>
    </p>

    <p id="topics_div" style="width=100%">
    {% for topic in topics %}
        <div class="w3-third">
            <input class="w3-check" type="checkbox" id="topic_{{ topic }}" name="topic_{{ topic }}"/>

            <label for="topic_{{ topic }}">{{topic}}</label>
        </div>
    {% endfor %}
    </p>

    <div style="width:100%">
        <div class="w3-third"><input class="w3-input" placeholder="new" type="text" id="new_topic"></div> 
        <button class="w3-btn w3-blue" id="new_topic_btn">Add</button>
    </div>

    <p>
        <input id="submit" style="margin-top: 24px;" onclick="send" value="Submit" class="w3-btn w3-blue"/>
    </p>
</form>

<script>
    function send() {
        console.log("hallo");
        const form_data = new FormData(form);
        console.log(form_data);

        const out = {};
        out["topics"] = [];

        for (e of form_data.entries()) {
            console.log(e);
            // TODO check if checkbox is checked

            if(e[0].startsWith("topic_") && e[1] ) {
                const t = e[0].substr(6);
                if(t.startsWith("new_")) {
                    out.topics.push({
                        type: "New",
                        0: t.substr(4)
                    });
                } else {
                    out["topics"].push({
                        type: "Exist",
                        0: t
                    });
                }
            }else{
                out[e[0]] = e[1];
            }
        }

        console.log(out);

        var request = new XMLHttpRequest();
        request.open('POST', '/diary');
        request.setRequestHeader('Content-Type', 'application/json; charset=UTF-8');
        request.send(JSON.stringify(out));
    }

    const submit = document.getElementById("submit");
    submit.addEventListener("click", send);

    function new_topic(event) {
        event.preventDefault();

        const name = new_topic_name.value;
        new_topic_name.value = '';

        topics_div.innerHTML += `
            <div class="w3-third">
            <input class="w3-check" type="checkbox" id="topic_new_${name}" name="topic_new_${name}" checked/>

            <label for="topic_new_${name}">${name}</label></div>
        `;
    }

    const add_topic = document.getElementById("new_topic_btn");
    add_topic.addEventListener("click", new_topic);

    const new_topic_name = document.getElementById("new_topic");

    const topics_div = document.getElementById("topics_div");

    {% if port %}
        const PORT = {{port}};
    {% else %}
        const PORT = 3012;
    {% endif %}

    const input = document.getElementById("inputfield");
    const output = document.getElementById("outputfield");
    var buzzy = false;

    input.addEventListener("input", changeText);
    input.addEventListener("propertychange", changeText);

    function changeText() {
        const s = input.value;
        input.rows = s.split("\n").length;
        if(!buzzy) {
            buzzy = true;
            connection.send(s);
        }
    }

    window.WebSocket = window.WebSocket || window.MozWebSocket;

    var connection = new WebSocket('ws://'+window.location.hostname+":"+PORT);

    connection.onopen = function () {
        console.log("connection is open");
    };

    connection.onerror = function (error) {
        // an error occurred when sending/receiving data
        console.log("errored");
        console.log(error);
    };

    connection.onmessage = function (message) {
        output.innerHTML = message.data;
        buzzy = false;
    };

</script>

{% endblock content %}
